w3c：html，css
ecma：js

HTML 负责网页内容
css 负责样式
js负责交互
head 对用户是不可见得
body 可见

meta :元数据
属性：property
	  attribute
	  charset 
	  1. utf-8
	  2. gb2312/gbk
	  3. iso8859-1

多类选择器：
	.aa{
            color: red;
        }
	.bb{
		font-style: italic;
	}
	<h1 id="h11" class="aa">this is  first title</h1>
	<h1 class="aa bb">this si second paragragh</h1>
	假如：
	.aa{
            color: red;
    }
	.bb{
		font-style: italic;
		color: green;
	}
	<h1 id="h11" class="aa">this is  first title</h1>
	<h1 class="aa bb">this si second paragragh</h1>
	会出现什么结果？
	原因：<h1 class="aa bb">this si second paragragh</h1>此处不管是aa bb 还是 bb aa 结果都一样
			关键在于前面style中声明的先后顺序有关： 处于后面的优先级高，顺序执行，将前面重复部分覆盖
							第一种：                   
							.aa{
									color: red;
							}
							.bb{
								font-style: italic;
								color: green;
							}
							第二种：
							.bb{
								font-style: italic;
								color: green;
							}
							.aa{
									color: red;
							}
	借助多类选择器覆盖以前的代码，而不用修改源代码
注重学习使用 类选择器 和 多类选择器    很好的学习方式就是读别人的源代码

派生选择器：
	后代选择器(所有后代包括儿子、孙子)：
			#div1 h1{         
				color: hotpink;
			}
			<div id="div1">
				<h1>this is a third title</h1>
				<div>
					<h1>this is a fouth title</h1>
				</div>
			</div>
	子代选择器（只包括儿子）：
            #div1 > h1{         
                color: hotpink;
            }
            <div id="div1">
				<h1>this is a third title</h1>
				<div>
					<h1>this is a fouth title</h1>
				</div>
			</div>
分组选择器：
        h1 ,p{
            color :indianred;
        }
        <h1 id="h11" class="aa">this is  first title</h1>
        <p id="p1">this is a paragragh</p>
        <h1 class="aa bb">this si second paragragh</h1>

优先级：内联样式 > 内部样式 >  外部样式  (并不是完全正确，而是根据浏览器加载顺序，后面的就会把前面的覆盖
        内部不一定大于外部，但是内联的一定是最大的)
一般不推荐用内联模式

权重值：
        内联：1000
        id：100
        class：10
        tag（标签）：1
        #div1 h1{     权重值 100+1=101
            color: darkgreen;
        }
        .div2 h1{     权重值：10+1=11
            color: darkred;
        }
        #div2-2 h1{   权重值 100+1=101
            color: darkviolet;
        }
        <div id="div1">
        <div id="div2-2" class="div2">
            <h1>this is a tileeee</h1>
        </div>

        权重值一样，后面的会把前面的覆盖；
        权重值不一样，权重值大的说了算
    强制干掉：！important
            :#h11{
                color: brown;
            } 
            
            .aa{
                color: chartreuse;
            }
            /* 内部样式 */
            h1{
                color: blue !important;
            }
            <h1 id="h11" class="aa" style="color: darkviolet;">this is a title</h1>

        h1#h11{         （不推荐这个）从右往左读，这个是先找到h11 ，在找h1
            color: brown;
        } 
        div.aa{         从右往左读
            background:blue;
        }

        <h1 id="h11" class="aa">this is a title</h1>
        <div id="h11" class="aa">aaaaa</div>
